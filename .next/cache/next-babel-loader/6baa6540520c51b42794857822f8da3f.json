{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\n\nfunction useFormValidation(initialState, validate, authenticate) {\n  const [values, setValues] = React.useState(initialState);\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setSubmitting] = React.useState(false);\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n\n      if (noErrors) {\n        authenticate();\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors]);\n\n  function handleChange(event) {\n    event.persist();\n    setValues(previousValues => _objectSpread(_objectSpread({}, previousValues), {}, {\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n    setValues(\"\");\n  }\n\n  return {\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    values,\n    errors,\n    isSubmitting\n  };\n}\n\nexport default useFormValidation;","map":{"version":3,"sources":["C:/Users/sapta/Documents/ReactProjects/dsc-firebase-master/src/components/Auth/useFormValidation.js"],"names":["React","useFormValidation","initialState","validate","authenticate","values","setValues","useState","errors","setErrors","isSubmitting","setSubmitting","useEffect","noErrors","Object","keys","length","handleChange","event","persist","previousValues","target","name","value","handleBlur","validationErrors","handleSubmit","preventDefault"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,iBAAT,CAA2BC,YAA3B,EAAyCC,QAAzC,EAAmDC,YAAnD,EAAiE;AAC/D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,KAAK,CAACO,QAAN,CAAeL,YAAf,CAA5B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACO,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACG,YAAD,EAAeC,aAAf,IAAgCX,KAAK,CAACO,QAAN,CAAe,KAAf,CAAtC;AAEAP,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,QAAIF,YAAJ,EAAkB;AAChB,YAAMG,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,MAApB,KAA+B,CAAhD;;AACA,UAAIH,QAAJ,EAAc;AACZT,QAAAA,YAAY;AACZO,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAHD,MAGO;AACLA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF;AACF,GAVD,EAUG,CAACH,MAAD,CAVH;;AAYA,WAASS,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,OAAN;AACAb,IAAAA,SAAS,CAACc,cAAc,oCACnBA,cADmB;AAEtB,OAACF,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AAFZ,MAAf,CAAT;AAID;;AAED,WAASC,UAAT,GAAsB;AACpB,UAAMC,gBAAgB,GAAGtB,QAAQ,CAACE,MAAD,CAAjC;AACAI,IAAAA,SAAS,CAACgB,gBAAD,CAAT;AACD;;AAED,WAASC,YAAT,CAAsBR,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACS,cAAN;AACA,UAAMF,gBAAgB,GAAGtB,QAAQ,CAACE,MAAD,CAAjC;AACAI,IAAAA,SAAS,CAACgB,gBAAD,CAAT;AACAd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAL,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD;;AAED,SAAO;AACLoB,IAAAA,YADK;AAELF,IAAAA,UAFK;AAGLP,IAAAA,YAHK;AAILZ,IAAAA,MAJK;AAKLG,IAAAA,MALK;AAMLE,IAAAA;AANK,GAAP;AAQD;;AAED,eAAeT,iBAAf","sourcesContent":["import React from \"react\";\n\nfunction useFormValidation(initialState, validate, authenticate) {\n  const [values, setValues] = React.useState(initialState);\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if (noErrors) {\n        authenticate();\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors]);\n\n  function handleChange(event) {\n    event.persist();\n    setValues(previousValues => ({\n      ...previousValues,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n    setValues(\"\")\n  }\n\n  return {\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    values,\n    errors,\n    isSubmitting\n  };\n}\n\nexport default useFormValidation;\n"]},"metadata":{},"sourceType":"module"}