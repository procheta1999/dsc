{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sapta\\\\Documents\\\\ReactProjects\\\\dsc-firebase-master\\\\src\\\\components\\\\Link\\\\SearchLinks.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport LinkItem from \"./LinkItem\";\nimport FirebaseContext from \"../../firebase/context\";\n\nfunction SearchLinks() {\n  const {\n    firebase\n  } = React.useContext(FirebaseContext);\n  const [filteredLinks, setFilteredLinks] = React.useState([]);\n  const [links, setLinks] = React.useState([]);\n  const [filter, setFilter] = React.useState(\"\");\n  React.useEffect(() => {\n    getInitialLinks();\n  }, []);\n\n  function getInitialLinks() {\n    firebase.db.collection(\"links\").get().then(snapshot => {\n      const links = snapshot.docs.map(doc => {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      setLinks(links);\n    });\n  }\n\n  function handleSearch(event) {\n    event.preventDefault();\n    const query = filter.toLowerCase();\n    const matchedLinks = links.filter(link => {\n      return link.description.toLowerCase().includes(query) || link.title.toLowerCase().includes(query) || link.postedBy.name.toLowerCase().includes(query);\n    });\n    setFilteredLinks(matchedLinks);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Search \", __jsx(\"input\", {\n    onChange: event => setFilter(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"OK\"))), filteredLinks.map((filteredLink, index) => __jsx(LinkItem, {\n    key: filteredLink.id,\n    showCount: false,\n    link: filteredLink,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default SearchLinks;","map":{"version":3,"sources":["C:/Users/sapta/Documents/ReactProjects/dsc-firebase-master/src/components/Link/SearchLinks.js"],"names":["React","LinkItem","FirebaseContext","SearchLinks","firebase","useContext","filteredLinks","setFilteredLinks","useState","links","setLinks","filter","setFilter","useEffect","getInitialLinks","db","collection","get","then","snapshot","docs","map","doc","id","data","handleSearch","event","preventDefault","query","toLowerCase","matchedLinks","link","description","includes","title","postedBy","name","target","value","filteredLink","index"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,KAAK,CAACK,UAAN,CAAiBH,eAAjB,CAArB;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;AAEAR,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBC,IAAAA,eAAe;AAChB,GAFD,EAEG,EAFH;;AAIA,WAASA,eAAT,GAA2B;AACzBV,IAAAA,QAAQ,CAACW,EAAT,CACGC,UADH,CACc,OADd,EAEGC,GAFH,GAGGC,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAMV,KAAK,GAAGU,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AACrC;AAASC,UAAAA,EAAE,EAAED,GAAG,CAACC;AAAjB,WAAwBD,GAAG,CAACE,IAAJ,EAAxB;AACD,OAFa,CAAd;AAGAd,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KARH;AASD;;AAED,WAASgB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,KAAK,GAAGjB,MAAM,CAACkB,WAAP,EAAd;AACA,UAAMC,YAAY,GAAGrB,KAAK,CAACE,MAAN,CAAaoB,IAAI,IAAI;AACxC,aACEA,IAAI,CAACC,WAAL,CAAiBH,WAAjB,GAA+BI,QAA/B,CAAwCL,KAAxC,KACAG,IAAI,CAACG,KAAL,CAAWL,WAAX,GAAyBI,QAAzB,CAAkCL,KAAlC,CADA,IAEAG,IAAI,CAACI,QAAL,CAAcC,IAAd,CAAmBP,WAAnB,GAAiCI,QAAjC,CAA0CL,KAA1C,CAHF;AAKD,KANoB,CAArB;AAOArB,IAAAA,gBAAgB,CAACuB,YAAD,CAAhB;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS;AAAO,IAAA,QAAQ,EAAEC,KAAK,IAAId,SAAS,CAACc,KAAK,CAACW,MAAN,CAAaC,KAAd,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,CADF,EAOGhC,aAAa,CAACe,GAAd,CAAkB,CAACkB,YAAD,EAAeC,KAAf,KACjB,MAAC,QAAD;AACE,IAAA,GAAG,EAAED,YAAY,CAAChB,EADpB;AAEE,IAAA,SAAS,EAAE,KAFb;AAGE,IAAA,IAAI,EAAEgB,YAHR;AAIE,IAAA,KAAK,EAAEC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPH,CADF;AAkBD;;AAED,eAAerC,WAAf","sourcesContent":["import React from \"react\";\nimport LinkItem from \"./LinkItem\";\nimport FirebaseContext from \"../../firebase/context\";\n\nfunction SearchLinks() {\n  const { firebase } = React.useContext(FirebaseContext);\n  const [filteredLinks, setFilteredLinks] = React.useState([]);\n  const [links, setLinks] = React.useState([]);\n  const [filter, setFilter] = React.useState(\"\");\n\n  React.useEffect(() => {\n    getInitialLinks();\n  }, []);\n\n  function getInitialLinks() {\n    firebase.db\n      .collection(\"links\")\n      .get()\n      .then(snapshot => {\n        const links = snapshot.docs.map(doc => {\n          return { id: doc.id, ...doc.data() };\n        });\n        setLinks(links);\n      });\n  }\n\n  function handleSearch(event) {\n    event.preventDefault();\n    const query = filter.toLowerCase();\n    const matchedLinks = links.filter(link => {\n      return (\n        link.description.toLowerCase().includes(query) ||\n        link.title.toLowerCase().includes(query) ||\n        link.postedBy.name.toLowerCase().includes(query)\n      );\n    });\n    setFilteredLinks(matchedLinks);\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <div>\n          Search <input onChange={event => setFilter(event.target.value)} />\n          <button>OK</button>\n        </div>\n      </form>\n      {filteredLinks.map((filteredLink, index) => (\n        <LinkItem\n          key={filteredLink.id}\n          showCount={false}\n          link={filteredLink}\n          index={index}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default SearchLinks;\n"]},"metadata":{},"sourceType":"module"}