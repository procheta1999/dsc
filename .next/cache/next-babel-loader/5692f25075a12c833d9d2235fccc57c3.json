{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sapta\\\\Documents\\\\ReactProjects\\\\dsc-firebase-master\\\\src\\\\components\\\\Link\\\\LinkList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\nimport LinkItem from \"./LinkItem\";\n\nfunction LinkList(props) {\n  _s();\n\n  var _this = this;\n\n  var _React$useContext = React.useContext(FirebaseContext),\n      firebase = _React$useContext.firebase;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      links = _React$useState2[0],\n      setLinks = _React$useState2[1];\n\n  React.useEffect(function () {\n    getLinks();\n  }, []);\n\n  function getLinks() {\n    firebase.db.collection(\"links\").orderBy(\"created\", \"desc\").onSnapshot(handleSnapshot);\n  }\n\n  function handleSnapshot(snapshot) {\n    var links = snapshot.docs.map(function (doc) {\n      var voted = false;\n      var votes = doc.data().votes;\n\n      if (votes[votedBy].id === user.uid) {\n        voted = true;\n      }\n\n      return _objectSpread({\n        id: doc.id,\n        voted: voted\n      }, doc.data());\n    });\n    setLinks(links);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, links.map(function (link) {\n    return __jsx(LinkItem, {\n      key: link.id,\n      link: link,\n      voted: voted,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\n_s(LinkList, \"EuY27tAPDSihgUfXMf0UHoY6KrQ=\");\n\n_c = LinkList;\nexport default LinkList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkList\");","map":{"version":3,"sources":["C:/Users/sapta/Documents/ReactProjects/dsc-firebase-master/src/components/Link/LinkList.js"],"names":["React","FirebaseContext","LinkItem","LinkList","props","useContext","firebase","useState","links","setLinks","useEffect","getLinks","db","collection","orderBy","onSnapshot","handleSnapshot","snapshot","docs","map","doc","voted","votes","data","votedBy","id","user","uid","link"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA;;AAAA,0BACFJ,KAAK,CAACK,UAAN,CAAiBJ,eAAjB,CADE;AAAA,MACfK,QADe,qBACfA,QADe;;AAAA,wBAEGN,KAAK,CAACO,QAAN,CAAe,EAAf,CAFH;AAAA;AAAA,MAEhBC,KAFgB;AAAA,MAETC,QAFS;;AAIvBT,EAAAA,KAAK,CAACU,SAAN,CAAgB,YAAM;AACnBC,IAAAA,QAAQ;AACV,GAFD,EAEG,EAFH;;AAIA,WAASA,QAAT,GAAoB;AAClBL,IAAAA,QAAQ,CAACM,EAAT,CACGC,UADH,CACc,OADd,EAEGC,OAFH,CAEW,SAFX,EAEsB,MAFtB,EAGGC,UAHH,CAGcC,cAHd;AAID;;AAED,WAASA,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,QAAMT,KAAK,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;AACrC,UAAIC,KAAK,GAAG,KAAZ;AACA,UAAIC,KAAK,GAAGF,GAAG,CAACG,IAAJ,GAAWD,KAAvB;;AACA,UAAGA,KAAK,CAACE,OAAD,CAAL,CAAeC,EAAf,KAAsBC,IAAI,CAACC,GAA9B,EAAkC;AAChCN,QAAAA,KAAK,GAAG,IAAR;AACD;;AACD;AAASI,QAAAA,EAAE,EAAEL,GAAG,CAACK,EAAjB;AAAqBJ,QAAAA,KAAK,EAALA;AAArB,SAA+BD,GAAG,CAACG,IAAJ,EAA/B;AACD,KAPa,CAAd;AAQAd,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAGD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACW,GAAN,CAAU,UAACS,IAAD;AAAA,WACT,MAAC,QAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACH,EADZ;AAEE,MAAA,IAAI,EAAEG,IAFR;AAGE,MAAA,KAAK,EAAEP,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAV,CADH,CADF;AAWD;;GAvCQlB,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport FirebaseContext from \"../../firebase/context\";\nimport LinkItem from \"./LinkItem\";\n\n\n\nfunction LinkList(props) {\n  const { firebase } = React.useContext(FirebaseContext);\n  const [links, setLinks] = React.useState([]);\n\n  React.useEffect(() => {\n     getLinks();\n  }, []);\n\n  function getLinks() {\n    firebase.db\n      .collection(\"links\")\n      .orderBy(\"created\", \"desc\")\n      .onSnapshot(handleSnapshot);\n  }\n\n  function handleSnapshot(snapshot) {\n    const links = snapshot.docs.map(doc => {\n      var voted = false;\n      var votes = doc.data().votes;\n      if(votes[votedBy].id === user.uid){\n        voted = true\n      }\n      return { id: doc.id, voted, ...doc.data() };\n    });\n    setLinks(links);\n  }\n\n\n  return (\n    <div>\n      {links.map((link) => (\n        <LinkItem\n          key={link.id}\n          link={link}\n          voted={voted}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default LinkList;\n"]},"metadata":{},"sourceType":"module"}